# --- Utility functions for code extraction ---
#' @keywords internal
extract_code_blocks <- function(text) {
if (is.null(text) || nchar(trimws(text)) == 0) return("")
pattern_r_explicit <- "```(?:[rR]|\\{[rR]\\})[\\s\\S]*?\\n([\\s\\S]*?)```"
pattern_generic <- "```[\\s\\S]*?\\n([\\s\\S]*?)```"
extracted_code_list <- character(0)
matches_r <- gregexpr(pattern_r_explicit, text, perl = TRUE)
if (matches_r[[1]][1] != -1) {
code_segments <- regmatches(text, matches_r)[[1]]
for (segment in code_segments) {
actual_code <- sub(pattern_r_explicit, "\\1", segment, perl = TRUE)
extracted_code_list <- c(extracted_code_list, actual_code)
}
if (length(extracted_code_list) == 0) {
matches_generic <- gregexpr(pattern_generic, text, perl = TRUE)
if (matches_generic[[1]][1] != -1) {
code_segments <- regmatches(text, matches_generic)[[1]]
for (segment in code_segments) {
actual_code <- sub(pattern_generic, "\\1", segment, perl = TRUE)
extracted_code_list <- c(extracted_code_list, actual_code)
}
if (length(extracted_code_list) > 0) {
return(paste(extracted_code_list, collapse = "\n\n"))
}
return("")
}
#' @keywords internal
process_gemini_code <- function(code) {
if (is.null(code) || nchar(trimws(code)) == 0) return("")
lines <- strsplit(code, "\n")[[1]]
non_empty_indices <- which(trimws(lines) != "")
if (length(non_empty_indices) == 0) return("")
lines <- lines[min(non_empty_indices):max(non_empty_indices)]
r_start_patterns <- c(
"^\\s*#", "^\\s*library\\(", "^\\s*require\\(", "^\\s*install\\.packages\\(",
"^\\s*[a-zA-Z0-9_\\.]+\\s*<-", "^\\s*[a-zA-Z0-9_\\.]+\\s*=",
"^\\s*if\\s*\\(", "^\\s*for\\s*\\(", "^\\s*while\\s*\\(", "^\\s*function\\s*\\(",
"^\\s*source\\s*\\(", "^\\s*data\\s*\\(", "^\\s*ggplot\\(", "^\\s*plot\\(", "^\\s*par\\("
)
start_idx <- 1
for (i in 1:length(lines)) {
if (any(sapply(r_start_patterns, function(p) grepl(p, lines[i])))) {
start_idx <- i; break
}
code_lines <- if (start_idx <= length(lines)) lines[start_idx:length(lines)] else character(0)
if (length(code_lines) == 0) return("")
return(paste(code_lines, collapse = "\n"))
}
`%||%` <- function(a, b) if (is.null(a) || length(a) == 0) b else a
# --- Helper Function to Detect Provider from Model Name ---
#' Detect the LLM provider based on the model name
#'
#' This function identifies the appropriate provider (Gemini, OpenAI, Anthropic)
#' based on the model name's pattern.
#'
#' @param model The model name string (e.g., "gpt-4", "gemini-1.0-pro", "claude-3-opus-20240229")
#' @return A string with the detected provider name ("gemini", "openai", or "anthropic"),
#'         or NULL if the provider couldn't be detected.
#' @keywords internal
detect_provider_from_model <- function(model) {
if (is.null(model) || !is.character(model) || nchar(trimws(model)) == 0) {
return(NULL)
}
model <- tolower(trimws(model))
# OpenAI models
if (grepl("^gpt-", model) ||
grepl("^text-", model) ||
model %in% c("davinci", "curie", "babbage", "ada")) {
return("openai")
}
# Gemini models
if (grepl("^gemini-", model) ||
grepl("^palm-", model) ||
grepl("^bison-", model) ||
grepl("^text-bison", model)) {
return("gemini")
}
# Anthropic models
if (grepl("^claude-", model) ||
grepl("^anthropic\\.", model)) {
return("anthropic")
}
# Could not determine provider
return(NULL)
}
document()
rm(list = c("create_llm_connection", "send_to_llm"))
document()
# gemini-2.0-flash: "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
#
# Simple test
test_data <- data.frame(
x = rnorm(50),
y = rnorm(50),
group = sample(LETTERS[1:3], 50, replace = TRUE)
)
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
llm_provider = llm_provider,
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
check()
document()
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
document()
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
document()
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
check()
roxygen2::roxygenize(GPL-3)
roxygen2::roxygenize("GPL-3"")
)P
fddfa
x)
)
}
library(devtools)
usethis::use_mit_license("Xianyang Zhang")
chekc()
check()
document()
check()
document()
check()
document()
check()
document()
check()
document()
check()
api_key = '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'
llm_model = "gpt-4"
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
# Simple test
test_data <- data.frame(
x = rnorm(50),
y = rnorm(50),
group = sample(LETTERS[1:3], 50, replace = TRUE)
)
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
api_key = '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'  # Your actual Anthropic API key
llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
roxygen2::roxygenize()
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
api_key = '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'
llm_provider = "openai"
llm_model = "gpt-4"
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
check()
api_key = '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'
llm_provider = "openai"
llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
document()
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
document()
api_key = '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'
llm_provider = "openai"
llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
api_key = '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'  # Your actual Anthropic API key
llm_provider = "anthropic"          # Use "anthropic" as the provider name
llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
document()
api_key = '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'  # Your actual Anthropic API key
llm_provider = "anthropic"          # Use "anthropic" as the provider name
llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
document()
check()
document()
check()
# Simple test
test_data <- data.frame(
x = rnorm(50),
y = rnorm(50),
group = sample(LETTERS[1:3], 50, replace = TRUE)
)
# api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
# llm_model = "gemini-2.0-flash"
# llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
api_key = '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'  # Your actual Anthropic API key
llm_provider = "anthropic"          # Use "anthropic" as the provider name
llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
llm_model = llm_model,
output_file = "test_analysis.html"
)
result <- auto_stat_two_step(
data = test_data,
question = "How does y relate to x and does it vary by group?",
api_key = api_key,
output_file = "test_analysis.html"
)
mtcars
airquality
document()
?auto_stat_two_step
mtcars
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = mtcars,
question = "What factors are most strongly associated with quarter-mile time?",
api_key = api_key,
llm_model = "gemni-2.0-flash"
)
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = mtcars,
question = "What factors are most strongly associated with quarter-mile time?",
api_key = api_key,
llm_model = "gemini-2.0-flash"
)
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = "gemini-2.0-flash"
)
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = "gemini-2.0-flash"
)
airquality
api_key = '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'  # Your actual Anthropic API key
llm_provider = "anthropic"          # Use "anthropic" as the provider name
llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = "claude-3-5-sonnet-20240620"
)
airquality
document()
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = "claude-3-5-sonnet-20240620"
)
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
document()
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
document()
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
document()
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
document()
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
document()
api_key = "AIzaSyDfkC8qhC39pm-idkIOwC7f20MYaejd3gk"
llm_model = "gemini-2.0-flash"
llm_provider = "gemini"
# api_key = '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'
# llm_provider = "openai"
# llm_model = "gpt-4"
# api_key = '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'  # Your actual Anthropic API key
# llm_provider = "anthropic"          # Use "anthropic" as the provider name
# llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
api_key = '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'  # Your actual Anthropic API key
llm_provider = "anthropic"          # Use "anthropic" as the provider name
llm_model = "claude-3-5-sonnet-20240620"  # For Claude 3.5 Sonnet
results <- auto_stat_two_step(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
results <- auto_stat(
data = airquality,
question = "How do temperature and wind speed affect ozone levels?",
api_key = api_key,
llm_model = llm_model
)
document()
check()
